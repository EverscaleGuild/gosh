
UNAME_S:=$(shell uname -s)
ifeq ($(UNAME_S),Linux)
	e:=echo -n
	BASE64:=base64 -w 0
	date=xargs -I{} date --date=@{} +"%b %d %T"
	du=du -sb
endif
ifeq ($(UNAME_S),Darwin)
	e:=/bin/echo -n
	BASE64:=base64
	date=xargs -I{} date -ur {} +"%b %d %T"
	du=du -sh
endif

# Tools directories
BIN:=~/bin
SOLC:=$(BIN)/solc
LIB:=$(BIN)/stdlib_sol.tvm
LINKER:=$(BIN)/tvm_linker
TOC:=$(BIN)/tonos-cli

GIVER:=Novi
_pay=$(BIN)/$(GIVER)/s3.sh $1 $2

# Repository location
GIT:=$(CURDIR)

# Source code of the smart-contracts
SRC:=src
# Build artefacts
BLD:=build
# Data used by the offchain system to interact with the blockchain
DAT:=data
# Scripts used by the system to interact with the blockchain
KEY:=~

# colored output
red:=\033[0;31m
green:=\033[0;32m
yellow:=\033[0;33m
blue:=\033[0;34m
purple:=\033[0;35m
cyan:=\033[0;36m
x:=\033[0m

comma=,
null:=
space:=$(null) $(null)

_arg="$1":"$2"
_pair=$(call _arg,$(word 1,$1),$(word 1,$2))$(if $(word 2,$1),$(comma)$(call _pair,$(wordlist 2,$(words $1),$1),$(wordlist 2,$(words $2),$2)),)
_args={$(if $(word 1,$1),$(call _pair,$1,$2),)}
_arg2="$1":$2
_pair2=$(call _arg2,$(word 1,$1),$(word 1,$2))$(if $(word 2,$1),$(comma)$(call _pair2,$(wordlist 2,$(words $1),$1),$(wordlist 2,$(words $2),$2)),)
_args2={$(if $(word 1,$1),$(call _pair2,$1,$2),)}

_hex=$(shell echo $1 | xxd -p -c 30000)
_hex2=$(shell xxd -p -c 30000 <$1)
